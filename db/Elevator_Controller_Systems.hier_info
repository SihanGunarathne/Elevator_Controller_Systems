|Elevator_Controller_Systems
Flr1 => Flr1.IN1
Flr2 => Flr2.IN1
Flr3 => Flr3.IN1
Flr4 => Flr4.IN1
A => A.IN1
B => B.IN1
Flr1_up => Flr1_up.IN1
Flr2_up => Flr2_up.IN1
Flr2_down => Flr2_down.IN1
Flr3_up => Flr3_up.IN1
Flr3_down => Flr3_down.IN1
Flr4_down => Flr4_down.IN1
Led1 <= controller:I1.port7
Led2 <= controller:I1.port8
Led3 <= controller:I1.port9
Led4 <= controller:I1.port10
sevseg[6] <= datapath:I2.port0
sevseg[5] <= datapath:I2.port0
sevseg[4] <= datapath:I2.port0
sevseg[3] <= datapath:I2.port0
sevseg[2] <= datapath:I2.port0
sevseg[1] <= datapath:I2.port0
sevseg[0] <= datapath:I2.port0
clock => clock.IN3
Door <= controller:I1.port0
reset => reset.IN2
direction <= controller:I1.port16
rest <= controller:I1.port17


|Elevator_Controller_Systems|datapath:I2
sevseg[6] <= sevseg[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sevseg[5] <= sevseg[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sevseg[4] <= sevseg[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sevseg[3] <= sevseg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sevseg[2] <= sevseg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sevseg[1] <= sevseg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sevseg[0] <= sevseg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segout[6] => sevseg[6]~reg0.ADATA
segout[5] => sevseg[5]~reg0.ADATA
segout[4] => sevseg[4]~reg0.ADATA
segout[3] => sevseg[3]~reg0.ADATA
segout[2] => sevseg[2]~reg0.ADATA
segout[1] => sevseg[1]~reg0.ADATA
segout[0] => sevseg[0]~reg0.ADATA
clock => sevseg[6]~reg0.CLK
clock => sevseg[5]~reg0.CLK
clock => sevseg[4]~reg0.CLK
clock => sevseg[3]~reg0.CLK
clock => sevseg[2]~reg0.CLK
clock => sevseg[1]~reg0.CLK
clock => sevseg[0]~reg0.CLK
reset => sevseg[6]~reg0.ALOAD
reset => sevseg[5]~reg0.ALOAD
reset => sevseg[4]~reg0.ALOAD
reset => sevseg[3]~reg0.ALOAD
reset => sevseg[2]~reg0.ALOAD
reset => sevseg[1]~reg0.ALOAD
reset => sevseg[0]~reg0.ALOAD


|Elevator_Controller_Systems|controller:I1
Door <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
start_tmr2 <= <VCC>
start_tmr1 <= <VCC>
Flr1 => NextState.Floor_04_open.IN0
Flr1 => NextState.Floor_04_open.IN1
Flr1 => NextState.Floor_04_open.OUTPUTSELECT
Flr1 => NextState.Floor_04_open.IN1
Flr1 => NextState.Floor_04_open.OUTPUTSELECT
Flr1 => NextState.Floor_04_open.IN1
Flr1 => NextState.Floor_04_closed.OUTPUTSELECT
Flr1 => NextState.Floor_04_closed.OUTPUTSELECT
Flr1 => NextState.Floor_03_open.OUTPUTSELECT
Flr1 => NextState.Floor_03_closed.OUTPUTSELECT
Flr1 => NextState.Floor_03_closed.OUTPUTSELECT
Flr1 => NextState.Floor_03_closed.OUTPUTSELECT
Flr1 => NextState.Floor_02_open.OUTPUTSELECT
Flr1 => NextState.Floor_02_closed.OUTPUTSELECT
Flr1 => NextState.Floor_01_closed.DATAA
Flr2 => NextState.Floor_04_open.IN1
Flr2 => NextState.Floor_04_open.IN0
Flr2 => NextState.Floor_04_open.OUTPUTSELECT
Flr2 => NextState.Floor_04_open.IN1
Flr2 => NextState.Floor_04_open.IN0
Flr2 => NextState.Floor_04_closed.OUTPUTSELECT
Flr2 => NextState.Floor_02_open.DATAA
Flr2 => NextState.Floor_03_closed.DATAA
Flr2 => NextState.Floor_03_closed.DATAA
Flr2 => NextState.Floor_04_open.DATAA
Flr2 => NextState.Floor_03_open.DATAA
Flr2 => NextState.Floor_02_closed.DATAA
Flr3 => NextState.Floor_04_open.IN1
Flr3 => NextState.Floor_04_open.IN1
Flr3 => NextState.Floor_04_open.IN1
Flr3 => NextState.Floor_04_open.IN0
Flr3 => NextState.Floor_04_open.OUTPUTSELECT
Flr3 => NextState.Floor_04_open.IN1
Flr3 => NextState.Floor_03_closed.OUTPUTSELECT
Flr3 => NextState.Floor_02_open.OUTPUTSELECT
Flr3 => NextState.Floor_02_closed.OUTPUTSELECT
Flr3 => NextState.Floor_03_closed.DATAA
Flr3 => NextState.Floor_04_closed.DATAA
Flr3 => NextState.Floor_04_open.DATAA
Flr3 => NextState.Floor_02_open.DATAA
Flr4 => NextState.Floor_04_open.IN1
Flr4 => NextState.Floor_04_open.IN1
Flr4 => NextState.Floor_04_open.IN1
Flr4 => NextState.Floor_04_open.IN1
Flr4 => NextState.Floor_04_open.IN1
Flr4 => NextState.Floor_03_open.OUTPUTSELECT
Flr4 => NextState.Floor_03_closed.OUTPUTSELECT
Flr4 => NextState.Floor_03_closed.OUTPUTSELECT
Flr4 => NextState.Floor_02_open.OUTPUTSELECT
Flr4 => NextState.Floor_02_open.OUTPUTSELECT
Flr4 => NextState.Floor_02_closed.OUTPUTSELECT
Flr4 => NextState.Floor_02_closed.OUTPUTSELECT
Flr4 => NextState.Floor_01_open.OUTPUTSELECT
Flr4 => NextState.Floor_04_closed.DATAA
Led1 <= Led1.DB_MAX_OUTPUT_PORT_TYPE
Led2 <= Led2.DB_MAX_OUTPUT_PORT_TYPE
Led3 <= Led3.DB_MAX_OUTPUT_PORT_TYPE
Led4 <= Led4.DB_MAX_OUTPUT_PORT_TYPE
expired2 => ~NO_FANOUT~
segout[6] <= <GND>
segout[5] <= <VCC>
segout[4] <= <VCC>
segout[3] <= <VCC>
segout[2] <= <VCC>
segout[1] <= <VCC>
segout[0] <= <VCC>
expired1 => ~NO_FANOUT~
clock => CurrentState~1.DATAIN
reset => CurrentState~3.DATAIN
direction <= direction$latch.DB_MAX_OUTPUT_PORT_TYPE
rest <= <VCC>
A => ~NO_FANOUT~
B => NextState.Floor_04_open.IN1
B => NextState.Floor_04_open.IN1
B => NextState.Floor_04_open.IN1
B => NextState.Floor_04_open.OUTPUTSELECT
B => NextState.Floor_04_open.IN1
B => NextState.Floor_04_closed.OUTPUTSELECT
B => NextState.Floor_03_open.OUTPUTSELECT
B => NextState.Floor_03_closed.OUTPUTSELECT
B => NextState.Floor_02_open.OUTPUTSELECT
B => NextState.Floor_02_closed.OUTPUTSELECT
B => NextState.Floor_01_open.OUTPUTSELECT
B => NextState.Floor_01_closed.OUTPUTSELECT
Flr1_up => NextState.Floor_04_open.IN1
Flr1_up => NextState.Floor_04_open.IN1
Flr1_up => NextState.Floor_04_open.IN1
Flr1_up => NextState.Floor_04_open.OUTPUTSELECT
Flr1_up => NextState.Floor_04_open.IN1
Flr1_up => NextState.Floor_04_closed.OUTPUTSELECT
Flr1_up => NextState.Floor_03_open.OUTPUTSELECT
Flr1_up => NextState.Floor_03_closed.OUTPUTSELECT
Flr1_up => NextState.Floor_03_closed.OUTPUTSELECT
Flr1_up => NextState.Floor_02_open.OUTPUTSELECT
Flr1_up => NextState.Floor_02_closed.OUTPUTSELECT
Flr1_up => NextState.Floor_02_closed.OUTPUTSELECT
Flr1_up => NextState.Floor_01_open.OUTPUTSELECT
Flr1_up => NextState.Floor_01_closed.OUTPUTSELECT
Flr2_up => NextState.Floor_04_open.IN1
Flr2_up => NextState.Floor_04_open.IN1
Flr2_up => NextState.Floor_04_open.IN1
Flr2_up => NextState.Floor_04_open.OUTPUTSELECT
Flr2_up => NextState.Floor_04_open.IN1
Flr2_up => NextState.Floor_04_closed.OUTPUTSELECT
Flr2_up => NextState.Floor_03_open.OUTPUTSELECT
Flr2_up => NextState.Floor_03_closed.OUTPUTSELECT
Flr2_up => NextState.Floor_03_closed.OUTPUTSELECT
Flr2_up => NextState.Floor_02_open.OUTPUTSELECT
Flr2_up => NextState.Floor_02_closed.OUTPUTSELECT
Flr2_up => NextState.Floor_02_closed.OUTPUTSELECT
Flr2_up => NextState.Floor_01_open.OUTPUTSELECT
Flr2_up => NextState.Floor_01_closed.OUTPUTSELECT
Flr2_down => NextState.Floor_04_open.IN1
Flr2_down => NextState.Floor_04_open.IN1
Flr2_down => NextState.Floor_04_open.IN1
Flr2_down => NextState.Floor_04_open.OUTPUTSELECT
Flr2_down => NextState.Floor_04_open.IN1
Flr2_down => NextState.Floor_04_closed.OUTPUTSELECT
Flr2_down => NextState.Floor_03_open.OUTPUTSELECT
Flr2_down => NextState.Floor_03_closed.OUTPUTSELECT
Flr2_down => NextState.Floor_03_closed.OUTPUTSELECT
Flr2_down => NextState.Floor_02_open.OUTPUTSELECT
Flr2_down => NextState.Floor_02_closed.OUTPUTSELECT
Flr2_down => NextState.Floor_02_closed.OUTPUTSELECT
Flr2_down => NextState.Floor_01_open.OUTPUTSELECT
Flr2_down => NextState.Floor_01_closed.OUTPUTSELECT
Flr3_up => NextState.Floor_04_open.IN1
Flr3_up => NextState.Floor_04_open.IN1
Flr3_up => NextState.Floor_04_open.IN1
Flr3_up => NextState.Floor_04_open.OUTPUTSELECT
Flr3_up => NextState.Floor_04_open.IN1
Flr3_up => NextState.Floor_04_closed.OUTPUTSELECT
Flr3_up => NextState.Floor_03_open.OUTPUTSELECT
Flr3_up => NextState.Floor_03_closed.OUTPUTSELECT
Flr3_up => NextState.Floor_03_closed.OUTPUTSELECT
Flr3_up => NextState.Floor_02_open.OUTPUTSELECT
Flr3_up => NextState.Floor_02_closed.OUTPUTSELECT
Flr3_up => NextState.Floor_02_closed.OUTPUTSELECT
Flr3_up => NextState.Floor_01_open.OUTPUTSELECT
Flr3_up => NextState.Floor_01_closed.OUTPUTSELECT
Flr3_down => NextState.Floor_04_open.IN1
Flr3_down => NextState.Floor_04_open.IN1
Flr3_down => NextState.Floor_04_open.IN1
Flr3_down => NextState.Floor_04_open.OUTPUTSELECT
Flr3_down => NextState.Floor_04_open.IN1
Flr3_down => NextState.Floor_04_closed.OUTPUTSELECT
Flr3_down => NextState.Floor_03_open.OUTPUTSELECT
Flr3_down => NextState.Floor_03_closed.OUTPUTSELECT
Flr3_down => NextState.Floor_03_closed.OUTPUTSELECT
Flr3_down => NextState.Floor_02_open.OUTPUTSELECT
Flr3_down => NextState.Floor_02_closed.OUTPUTSELECT
Flr3_down => NextState.Floor_02_closed.OUTPUTSELECT
Flr3_down => NextState.Floor_01_open.OUTPUTSELECT
Flr3_down => NextState.Floor_01_closed.OUTPUTSELECT
Flr4_down => NextState.Floor_04_open.IN1
Flr4_down => NextState.Floor_04_open.IN1
Flr4_down => NextState.Floor_04_open.IN1
Flr4_down => NextState.Floor_04_open.OUTPUTSELECT
Flr4_down => NextState.Floor_04_open.IN1
Flr4_down => NextState.Floor_04_closed.OUTPUTSELECT
Flr4_down => NextState.Floor_03_open.OUTPUTSELECT
Flr4_down => NextState.Floor_03_closed.OUTPUTSELECT
Flr4_down => NextState.Floor_03_closed.OUTPUTSELECT
Flr4_down => NextState.Floor_02_open.OUTPUTSELECT
Flr4_down => NextState.Floor_02_closed.OUTPUTSELECT
Flr4_down => NextState.Floor_02_closed.OUTPUTSELECT
Flr4_down => NextState.Floor_01_open.OUTPUTSELECT
Flr4_down => NextState.Floor_01_closed.OUTPUTSELECT


|Elevator_Controller_Systems|Door_delay_TMR1:TMR1
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => expired~reg0.CLK
start_tmr1 => expired.OUTPUTSELECT
start_tmr1 => count[1].ENA
start_tmr1 => count[0].ENA
start_tmr1 => count[2].ENA
start_tmr1 => count[3].ENA
expired <= expired~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Elevator_Controller_Systems|Elevator_Timer_TMR2:TMR2
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => count[4].CLK
clock => count[5].CLK
clock => count[6].CLK
clock => expired~reg0.CLK
start_tmr2 => expired.OUTPUTSELECT
start_tmr2 => count[1].ENA
start_tmr2 => count[0].ENA
start_tmr2 => count[2].ENA
start_tmr2 => count[3].ENA
start_tmr2 => count[4].ENA
start_tmr2 => count[5].ENA
start_tmr2 => count[6].ENA
expired <= expired~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Elevator_Controller_Systems|clockDivider:D2
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => count[4].CLK
clock => count[5].CLK
clock => count[6].CLK
clock => count[7].CLK
clock => count[8].CLK
clock => clock_out~reg0.CLK
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].PRESET
rst => count[3].ACLR
rst => count[4].PRESET
rst => count[5].PRESET
rst => count[6].PRESET
rst => count[7].PRESET
rst => count[8].PRESET
rst => clock_out~reg0.ACLR
clock_out <= clock_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


